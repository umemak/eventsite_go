version: '3'

services:
  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: eventsite
      MYSQL_USER: eventsite
      MYSQL_PASSWORD: eventsite
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    ports:
      - 3306:3306
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080
    depends_on:
      db:
        condition: service_healthy

  app:
    build:
      target: air
      context: .
    container_name: app
    ports:
      - 8081:8081
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy

  api:
    build:
      target: air
      context: .
    container_name: api
    ports:
      - 8082:8082
    volumes:
      - .:/app
    command: air -c /app/.air_api.toml
    depends_on:
      db:
        condition: service_healthy

  pocketbase:
    image: pocketbase:local
    build:
      context: .
      target: pocketbase
    container_name: pocketbase
    environment:
      TZ: 'Asia/Tokyo'
    volumes:
      - ./pb_data:/app/pb_data
    ports:
      - 8090:8090

  dev:
    build:
      target: dev
      context: .
    volumes:
      - .:/work
    tty: true

  grpc-server:
    build:
      target: server-runner
      context: .
    ports:
      - 50051:50051

  gateway-server:
    build:
      target: gateway-runner
      context: .
    ports:
      - 8080:8080

  docs-server:
    # swagger-ui's document url:
    #   https://swagger.io/docs/open-source-tools/swagger-ui/usage/installation/
    #   https://swagger.io/docs/open-source-tools/swagger-ui/usage/configuration/
    image: swaggerapi/swagger-ui
    environment:
      SWAGGER_JSON: /gen/openapiv2/apidocs.swagger.json
      BASE_URL: /docs
    volumes:
      - ./gen/openapiv2/eventsite/v1/event.swagger.json:/gen/openapiv2/apidocs.swagger.json

  # react-admin:
  #   build:
  #     target: react-admin
  #     context: .
  #   ports:
  #     - 8084:3000
  #   volumes:
  #     - ./frontend:/work
  #   command: npm run dev
